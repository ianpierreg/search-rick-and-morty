{"version":3,"sources":["reportWebVitals.js","images/logo.svg","components/ui/button.jsx","components/ui/toast.jsx","components/ui/search.jsx","images/loading.svg","components/ui/loading_cover.jsx","helpers/common_prop_types.js","components/ui/location_info.jsx","components/ui/base_character.jsx","components/ui/expanded_character.jsx","components/ui/character_details.jsx","components/ui/character.jsx","components/ui/characters_list.jsx","components/ui/pagination.jsx","images/empty.png","components/ui/empty_state.jsx","components/home.jsx","components/hooks/fetch_characters.jsx","app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","className","onClick","text","type","aria-label","defaultProps","Toast","toastData","useState","toast","setToast","toastInitialState","useMemo","title","undefined","description","dismissTime","useEffect","setTimeout","Search","searchValue","setSearchValue","name","setName","setToastData","placeholder","onChange","e","target","value","LoadingCover","src","loading","alt","locationPropTypes","PropTypes","shape","string","dimension","residents","arrayOf","objectOf","number","locationDefaultProps","characterDefaultProps","id","oneOf","isRequired","image","gender","status","species","episode","air_date","location","origin","LocationInfo","locationWithPlaceholders","length","BaseCharacter","character","label","role","tabIndex","aria-hidden","ExpandedCharacter","CharacterDetails","show","close","about","pop","isOpen","portalClassName","overlayClassName","style","overlay","position","top","left","right","bottom","backgroundColor","content","background","padding","width","display","justifyContent","border","margin","overflow","Character","showDetails","setShowDetails","CharactersList","characters","map","char","Pagination","numberOfPages","currentPage","setCurrentPage","offset","setOffset","oldOffset","oldCurrentPage","Array","_","index","pageNumber","classNames","page","current","onPageNumberClick","EmptyState","empty","Home","showLoading","setShowLoading","setCharacters","setNumberOfPages","options","variables","useManualQuery","fetchCharacters","error","data","results","info","count","Math","ceil","useFetchCharacters","message","home","logo","App","client","GraphQLClient","url","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0140b63b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","export default __webpack_public_path__ + \"static/media/logo.dddf9684.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../stylesheets/button.scss'\n\nconst Button = ({ className, onClick, text }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    className={className}\n    aria-label={`${text} button`}\n  >\n    {text}\n  </button>\n)\n\nButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n}\n\nButton.defaultProps = {\n  className: '',\n  onClick: () => {}\n}\n\nexport default Button\n","import React, { useState, useEffect, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport '../../stylesheets/toast.scss'\n\nconst Toast = ({ toastData }) => {\n  const [toast, setToast] = useState(toastData)\n\n  const toastInitialState = useMemo(() => ({\n    title: undefined,\n    description: undefined,\n    dismissTime: 0\n  }), [])\n\n  useEffect(() => {\n    setToast(toastData || toastInitialState)\n  }, [toastData, toastInitialState])\n\n  useEffect(() => {\n    if (!toast.title || !toast.description) return\n    setTimeout(() => {\n      setToast(toastInitialState)\n    }, toast.dismissTime || 4000)\n  }, [toast.title, toast.description, toast.dismissTime, toastInitialState])\n\n  return toast.title && toast.description ? (\n    <>\n      <div className=\"notification-container\">\n        <div className=\"notification toast\">\n          <span className=\"notification-title\">{toast.title}</span>\n          <span className=\"notification-message\">{toast.description}</span>\n        </div>\n      </div>\n    </>\n  ) : null\n}\n\nToast.propTypes = {\n  toastData: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    dismissTime: PropTypes.number\n  })\n}\n\nToast.defaultProps = {\n  toastData: {\n    title: undefined,\n    description: undefined,\n    dismissTime: 4000\n  }\n}\n\nexport default Toast\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './button'\nimport '../../stylesheets/search.scss'\nimport Toast from './toast'\n\n// eslint-disable-next-line max-lines-per-function\nconst Search = ({ searchValue, setSearchValue }) => {\n  const [name, setName] = useState('')\n  const [toastData, setToastData] = useState()\n\n  const onClick = () => {\n    if (searchValue !== name) setSearchValue(name)\n    else {\n      setToastData({\n        title: 'I just retrieve that data',\n        description: 'I refuse to search something I already know...',\n      })\n    }\n  }\n  return (\n    <div className=\"search-wrapper\">\n      <Toast toastData={toastData} />\n      <input\n        type=\"search\"\n        className=\"search-input\"\n        placeholder=\"Search Characters\"\n        onChange={e => setName(e.target.value)}\n        value={name}\n        aria-label=\"Search box\"\n      />\n      <Button\n        onClick={onClick}\n        className=\"search-button\"\n        text=\"Search\"\n      />\n    </div>\n  )\n}\n\nSearch.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  setSearchValue: PropTypes.func.isRequired\n}\n\nexport default Search\n","export default __webpack_public_path__ + \"static/media/loading.fd752ea1.svg\";","import React from 'react'\nimport loading from '../../images/loading.svg'\nimport '../../stylesheets/loading_cover.scss'\n\nconst LoadingCover = () => (\n  <div className=\"loading-wrapper\">\n    <img src={loading} alt=\"loading\" className=\"loading-image\" />\n    <span className=\"loading-text\">Loading</span>\n  </div>\n)\n\nexport default LoadingCover\n","import PropTypes from 'prop-types'\n\nconst locationPropTypes = PropTypes.shape({\n  type: PropTypes.string,\n  string: PropTypes.string,\n  dimension: PropTypes.string,\n  residents: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.number)),\n})\n\nconst locationDefaultProps = {\n  type: 'Unknown Place',\n  name: 'Unknown',\n  dimension: 'Unknown Dimension',\n  residents: []\n}\n\nconst characterPropTypes = PropTypes.shape({\n  id: PropTypes.oneOf([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  gender: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  episode: PropTypes.arrayOf(PropTypes.shape({\n    air_date: PropTypes.number.isRequired\n  })).isRequired,\n  location: locationPropTypes,\n  origin: locationPropTypes\n})\n\nconst characterDefaultProps = PropTypes.shape({\n  gender: 'Unknown',\n  status: 'Unknown',\n  species: 'Unknown',\n  location: locationDefaultProps,\n  origin: locationDefaultProps\n})\n\nexport {\n  locationDefaultProps,\n  locationPropTypes,\n  characterPropTypes,\n  characterDefaultProps\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FiUsers } from 'react-icons/fi'\nimport { locationDefaultProps, locationPropTypes } from '../../helpers/common_prop_types'\nimport '../../stylesheets/location_info.scss'\n\nconst LocationInfo = ({ title, location }) => {\n  const locationWithPlaceholders = { ...locationDefaultProps, ...location }\n\n  return (\n    <div className=\"location-info\">\n      <h1>{title}</h1>\n      <span className=\"planet\">{locationWithPlaceholders.type}</span>\n      <span className=\"planet-dimension\">{locationWithPlaceholders.name}</span>\n      <span className=\"dimension\">{locationWithPlaceholders.dimension}</span>\n      {locationWithPlaceholders.residents && (\n        <div className=\"residents\">\n          <span className=\"icon\"><FiUsers /></span>\n          <span className=\"residents-number\">\n            {locationWithPlaceholders.residents.length}\n            residents\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nLocationInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  location: locationPropTypes\n}\n\nLocationInfo.defaultProps = { location: locationDefaultProps }\n\nexport default LocationInfo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { characterDefaultProps, characterPropTypes } from '../../helpers/common_prop_types'\nimport '../../stylesheets/character.scss'\n\nconst BaseCharacter = ({ character, className, onClick, label }) => {\n  const { name, status, species, image } = character\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      aria-hidden=\"true\"\n      className={`character-card ${className}`}\n      onClick={onClick}\n      aria-label={label}\n    >\n      <div className=\"character-image-wrapper\">\n        <img src={image} alt={name} className={status === 'Dead' && 'grayscale'} />\n      </div>\n      <div className=\"character-info\">\n        <span className=\"name\" title={name}>{name}</span>\n        <span className=\"species\">{species}</span>\n      </div>\n    </div>\n  )\n}\n\nBaseCharacter.propTypes = {\n  character: characterPropTypes,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  label: PropTypes.string.isRequired,\n}\n\nBaseCharacter.defaultProps = {\n  character: characterDefaultProps,\n  className: '',\n  onClick: () => { }\n}\n\nexport default BaseCharacter\n","import React from 'react'\nimport { characterDefaultProps, characterPropTypes } from '../../helpers/common_prop_types'\nimport BaseCharacter from './base_character'\nimport '../../stylesheets/character.scss'\n\nconst ExpandedCharacter = ({ character }) => (\n  <BaseCharacter\n    character={character}\n    className=\"expanded\"\n    label={`Card of the character ${character.name} from Rick and Morty TV Show`}\n  />\n)\n\nExpandedCharacter.propTypes = { character: characterPropTypes }\n\nExpandedCharacter.defaultProps = { character: characterDefaultProps, }\n\nexport default ExpandedCharacter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Modal from 'react-modal'\nimport { characterDefaultProps, characterPropTypes } from '../../helpers/common_prop_types'\nimport LocationInfo from './location_info'\nimport ExpandedCharacter from './expanded_character'\nimport Button from './button'\nimport '../../stylesheets/character_details.scss'\n\n// eslint-disable-next-line max-lines-per-function\nconst CharacterDetails = ({ show, close, character }) => {\n  const { name, image, gender, status, species, episode, location, origin } = character\n\n  const livingStatus = () => {\n    if (status === 'Dead') return 'He is dead.'\n    if (status === 'Alive') return 'He is alive and well.'\n    return 'It can\\'t be told if he is alive or dead.'\n  }\n\n  const about = `${name} is a ${gender} ${species}. ${livingStatus()}. \n                 Last seen in ${episode.pop()?.air_date}.`\n\n  const stylesModalOverlay = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)'\n  }\n\n  const stylesModalContent = {\n    background: 'none',\n    padding: 0,\n    width: '77%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    border: 'none',\n    margin: 'auto',\n    overflow: 'hidden',\n  }\n\n  return (\n    <Modal\n      isOpen={show}\n      portalClassName=\"character-modal-portal\"\n      overlayClassName=\"character-modal-overlay\"\n      style={{\n        overlay: stylesModalOverlay,\n        content: stylesModalContent\n      }}\n    >\n      <div className=\"floating-card\">\n        <ExpandedCharacter character={character} />\n      </div>\n      <div className=\"modal-wrapper\">\n        <Button onClick={close} className=\"modal-close-button\" text=\"\" />\n        <div className=\"character-image-blurred\">\n          <img src={image} alt={name} />\n        </div>\n        <div className=\"details-wrapper\">\n          <div className=\"about-wrapper\">\n            <h1>About</h1>\n            <p className=\"personal-info\">\n              {about}\n            </p>\n          </div>\n          <LocationInfo location={origin} title=\"Origin\" />\n          <LocationInfo location={location} title=\"Location\" />\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nCharacterDetails.propTypes = {\n  character: characterPropTypes,\n  show: PropTypes.bool,\n  close: PropTypes.func.isRequired,\n}\n\nCharacterDetails.defaultProps = {\n  character: characterDefaultProps,\n  show: false\n}\n\nexport default CharacterDetails\n","import React, { useState } from 'react'\nimport { characterDefaultProps, characterPropTypes } from '../../helpers/common_prop_types'\nimport CharacterDetails from './character_details'\nimport BaseCharacter from './base_character'\nimport '../../stylesheets/character.scss'\n\nconst Character = ({ character }) => {\n  const [showDetails, setShowDetails] = useState(false)\n\n  return (\n    <>\n      <BaseCharacter\n        character={character}\n        onClick={() => setShowDetails(true)}\n        label={`Clickable card of the character ${character.name} from Rick and Morty TV Show`}\n      />\n      <CharacterDetails\n        show={showDetails}\n        close={() => setShowDetails(false)}\n        character={character}\n      />\n    </>\n  )\n}\n\nCharacter.propTypes = { character: characterPropTypes }\n\nCharacter.defaultProps = { character: characterDefaultProps }\n\nexport default Character\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { characterDefaultProps, characterPropTypes } from '../../helpers/common_prop_types'\nimport Character from './character'\nimport '../../stylesheets/characters_list.scss'\n\nconst CharactersList = ({ characters }) => (\n  <div className=\"characters-list\">\n    {characters.map(char => <Character character={char} key={char.id} />)}\n  </div>\n)\n\nCharactersList.propTypes = { characters: PropTypes.arrayOf(characterPropTypes) }\n\nCharactersList.defaultProps = {\n  characters: PropTypes.shape(characterDefaultProps)\n}\n\nexport default CharactersList\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi'\nimport classNames from 'classnames/bind'\nimport Toast from './toast'\nimport '../../stylesheets/pagination.scss'\n\n// eslint-disable-next-line max-lines-per-function\nconst Pagination = ({ numberOfPages, currentPage, setCurrentPage }) => {\n  const [offset, setOffset] = useState(5)\n  const [toastData, setToastData] = useState()\n  const title = 'Oh oh...'\n\n  const setToastLeftArrow = () => setToastData({\n    title,\n    description: 'There is no page 0, you should know it!',\n  })\n\n  const setToastRightArrow = () => setToastData({\n    title,\n    description: 'There is no page 0, you should know it!',\n  })\n\n  const onLeftArrowClick = () => {\n    if (currentPage <= 1) {\n      setToastLeftArrow()\n      return\n    }\n\n    setOffset(oldOffset => {\n      if (currentPage === oldOffset - 4 || currentPage === oldOffset - 5) return oldOffset - 4\n      return oldOffset\n    })\n\n    setCurrentPage(oldCurrentPage => oldCurrentPage - 1)\n  }\n\n  const onRightArrowClick = () => {\n    if (currentPage >= numberOfPages) {\n      setToastRightArrow()\n      return\n    }\n\n    setOffset(oldOffset => {\n      if (currentPage + 1 === oldOffset || currentPage === oldOffset) return oldOffset + 4\n      return oldOffset\n    })\n\n    setCurrentPage(oldCurrentPage => oldCurrentPage + 1)\n  }\n\n  const onPageNumberClick = pageNumber => {\n    setOffset(oldOffset => {\n      if (pageNumber === oldOffset) return oldOffset + 4\n      if (pageNumber === oldOffset - 4 && pageNumber >= 5) return oldOffset - 4\n      return oldOffset\n    })\n    setCurrentPage(pageNumber)\n  }\n\n  const renderPaginationNumbers = (_, index) => {\n    const pageNumber = index + 1\n    if (pageNumber > offset || pageNumber < offset - 4) return null\n    return (\n      <button\n        type=\"button\"\n        className={classNames({ page: true, current: pageNumber === currentPage })}\n        key={pageNumber}\n        onClick={() => onPageNumberClick(pageNumber)}\n      >\n        {pageNumber}\n      </button>\n    )\n  }\n\n  return numberOfPages && (\n    <div className=\"pages\">\n      <Toast toastData={toastData} />\n      <button type=\"button\" className=\"arrows\" onClick={onLeftArrowClick}>\n        <FiChevronLeft />\n      </button>\n      {numberOfPages && [...Array(numberOfPages)].map(renderPaginationNumbers)}\n      <button type=\"button\" className=\"arrows\" onClick={onRightArrowClick}>\n        <FiChevronRight />\n      </button>\n    </div>\n  )\n}\n\nPagination.propTypes = {\n  numberOfPages: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  setCurrentPage: PropTypes.func.isRequired\n}\n\nexport default Pagination\n","export default __webpack_public_path__ + \"static/media/empty.90fc5f47.png\";","import React from 'react'\nimport empty from '../../images/empty.png'\nimport '../../stylesheets/empty_state.scss'\n\nconst EmptyState = () => (\n  <div className=\"empty-state\">\n    <div className=\"empty-image\">\n      <img src={empty} alt=\"empty state\" />\n    </div>\n    <div className=\"empty-title\">Sorry! No Results Found :( </div>\n    <div className=\"empty-subtitle\">\n      We have searched more than a billion galaxies\n      but no sign of the character you are looking for.\n    </div>\n  </div>\n)\n\nexport default EmptyState\n","import React, { useState, useEffect } from 'react'\nimport classNames from 'classnames/bind'\nimport logo from '../images/logo.svg'\nimport useFetchCharacters from './hooks/fetch_characters'\nimport Search from './ui/search'\nimport LoadingCover from './ui/loading_cover'\nimport CharactersList from './ui/characters_list'\nimport Pagination from './ui/pagination'\nimport EmptyState from './ui/empty_state'\nimport '../stylesheets/home.scss'\nimport Toast from './ui/toast'\n\n// eslint-disable-next-line max-lines-per-function\nconst Home = () => {\n  const [showLoading, setShowLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState()\n  const [currentPage, setCurrentPage] = useState(0)\n  const [toastData, setToastData] = useState()\n  const {\n    fetchCharacters,\n    loading,\n    error,\n    characters,\n    numberOfPages\n  } = useFetchCharacters({ searchValue, currentPage })\n\n  useEffect(() => {\n    if (error && error.message) {\n      setToastData({\n        title: 'Ops!',\n        description: 'Some error happened trying to retrieve data...',\n      })\n    }\n  }, [error])\n\n  useEffect(() => { setShowLoading(loading) }, [loading, setShowLoading])\n\n  useEffect(() => {\n    if (searchValue && searchValue !== '') setCurrentPage(1)\n  }, [searchValue, setCurrentPage])\n\n  useEffect(() => {\n    if (currentPage > 0) fetchCharacters()\n  }, [currentPage, fetchCharacters])\n\n  return (\n    <>\n      <Toast toastData={toastData} />\n      <div className={classNames({ home: true, loading: showLoading })}>\n        <header className=\"header\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <Search searchValue={searchValue} setSearchValue={setSearchValue} />\n        </header>\n        {characters && characters.length && <CharactersList characters={characters} />}\n        {characters && !characters.length && <EmptyState />}\n      </div>\n      {currentPage > 0 && characters && characters.length && (\n        <footer>\n          <Pagination\n            numberOfPages={numberOfPages}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n          />\n        </footer>\n      )}\n      {showLoading && <LoadingCover />}\n    </>\n  )\n}\n\nexport default Home\n","import { useState, useEffect } from 'react'\nimport { useManualQuery } from 'graphql-hooks'\n\nconst QUERY = `query GetCharacters($name: String, $page: Int) {\n  characters(page: $page, filter: { name: $name }) {\n    info {\n      count\n    },\n    results {\n      id,\n      name,\n      status,\n      species,\n      type,\n      gender,\n      image,\n      episode {\n        air_date \n      },\n      location {\n        name,\n        type,\n        dimension,\n        residents {\n          id\n        }\n      },\n      origin {\n        name,\n        type,\n        dimension,\n        residents {\n          id\n        }\n      }\n    }\n  }\n}`\n\nexport default function useFetchCharacters({ searchValue, currentPage }) {\n  const [characters, setCharacters] = useState()\n  const [numberOfPages, setNumberOfPages] = useState(0)\n  const options = { variables: { name: searchValue, page: currentPage } }\n  const [fetchCharacters, { loading, error, data }] = useManualQuery(QUERY, options)\n\n  useEffect(() => {\n    if (data?.characters?.results) setCharacters(data.characters.results)\n    if (data?.characters?.info?.count) setNumberOfPages(Math.ceil(data.characters.info.count / 20))\n    if (data?.characters === null && error) setCharacters([])\n  }, [loading, error, data])\n\n  return { fetchCharacters, loading, error, characters, numberOfPages }\n}\n","import React from 'react'\nimport { GraphQLClient, ClientContext } from 'graphql-hooks'\nimport Home from './components/home'\nimport loading from './images/loading.svg'\nimport './stylesheets/_base.scss'\n\nexport default function App() {\n  const client = new GraphQLClient({ url: 'https://rickandmortyapi.com/graphql' })\n\n  return (\n    <ClientContext.Provider value={client}>\n      <Home />\n      <div className=\"hidden\">\n        <img src={loading} alt=\"\" />\n      </div>\n    </ClientContext.Provider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport App from './app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}